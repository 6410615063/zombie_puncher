(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const i of n)if(i.type==="childList")for(const p of i.addedNodes)p.tagName==="LINK"&&p.rel==="modulepreload"&&s(p)}).observe(document,{childList:!0,subtree:!0});function t(n){const i={};return n.integrity&&(i.integrity=n.integrity),n.referrerPolicy&&(i.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?i.credentials="include":n.crossOrigin==="anonymous"?i.credentials="omit":i.credentials="same-origin",i}function s(n){if(n.ep)return;n.ep=!0;const i=t(n);fetch(n.href,i)}})();console.log("Hello World");const E=new THREE.Scene;E.background=new THREE.Color(8900331);const a=new THREE.PerspectiveCamera(75,window.innerWidth/window.innerHeight,.1,1e3);a.position.set(0,1.5,10);a.rotation.y=0;const x=new THREE.WebGLRenderer;x.setSize(window.innerWidth,window.innerHeight);document.body.appendChild(x.domElement);const se=new THREE.PlaneGeometry(50,50),ie=new THREE.MeshBasicMaterial({color:2263842}),X=new THREE.Mesh(se,ie);X.rotation.x=-Math.PI/2;E.add(X);const re=new THREE.BoxGeometry(1,1,1),ae=new THREE.MeshBasicMaterial({color:255}),r=new THREE.Mesh(re,ae);r.position.set(0,.5,0);E.add(r);const ce=new THREE.BoxGeometry(.5,.5,.5),le=new THREE.MeshBasicMaterial({color:16711680}),J=new THREE.Mesh(ce,le);J.position.set(.75,0,.75);r.add(J);const de=new THREE.SphereGeometry(.25,32,32),pe=new THREE.MeshBasicMaterial({color:15843965}),d=new THREE.Mesh(de,pe);d.position.set(.5,-.5,-1);a.add(d);E.add(a);const B=new THREE.Box3,fe=30,f={forward:!1,backward:!1,left:!1,right:!1},b={left:!1,right:!1},N=.05,q=.05;let R=!1,v=0,P=!1,Q=0,M=100,H=!1,K=0;const Y=1,he=1.5;let m=0;m=1;const k=document.getElementById("slot-1");k.innerText="Fist";k.style.color="white";k.style.fontSize="14px";k.style.textAlign="center";k.style.lineHeight="50px";let y=0,Z=0;const g=document.createElement("div");g.style.position="absolute";g.style.top="10px";g.style.right="10px";g.style.fontSize="24px";g.style.color="white";g.innerText=`Score: ${y}`;document.body.appendChild(g);const l=document.createElement("div");l.style.position="absolute";l.style.top="50%";l.style.left="50%";l.style.width="10px";l.style.height="10px";l.style.backgroundColor="white";l.style.borderRadius="50%";l.style.transform="translate(-50%, -50%)";l.style.zIndex="1000";document.body.appendChild(l);function _(){g.innerText=`Score: ${y}`}window.addEventListener("keydown",e=>{switch(e.key){case"w":case"ArrowUp":f.forward=!0;break;case"s":case"ArrowDown":f.backward=!0;break;case"a":case"ArrowLeft":f.left=!0;break;case"d":case"ArrowRight":f.right=!0;break;case"q":b.left=!0;break;case"e":b.right=!0;break;case" ":!R&&!P&&(R=!0,v=performance.now());break}});window.addEventListener("keydown",e=>{if(e.key>="1"&&e.key<="9"){const o=parseInt(e.key);A(o)}else e.key==="0"&&A(0)});window.addEventListener("keydown",e=>{if(e.key>="1"&&e.key<="9"){const o=parseInt(e.key);A(o)}});window.addEventListener("keyup",e=>{switch(e.key){case"w":case"ArrowUp":f.forward=!1;break;case"s":case"ArrowDown":f.backward=!1;break;case"a":case"ArrowLeft":f.left=!1;break;case"d":case"ArrowRight":f.right=!1;break;case"q":b.left=!1;break;case"e":b.right=!1;break;case" ":if(R){if(R=!1,m===0){P=!0,Q=performance.now();const o=(performance.now()-v)/1e3,t=Math.min(o*10,50),s=Math.min(o*2,10);U(t,s)}else if(m===1){performance.now();const o=(performance.now()-v)/1e3,t=Math.min(o*20,fe),s=Math.min(o*3,15);U(t,s)}}break}});function A(e){m>0&&document.getElementById(`slot-${m}`).classList.remove("selected"),m=e,document.getElementById(`slot-${m}`).classList.add("selected"),m===1?d.visible=!0:m===2&&(d.visible=!1),console.log(`Selected slot: ${m}`)}function C(){a.position.set(r.position.x,r.position.y+1.5,r.position.z)}function me(){const o=r.position.clone();f.forward&&(r.position.z-=.1*Math.cos(a.rotation.y),r.position.x-=.1*Math.sin(a.rotation.y)),f.backward&&(r.position.z+=.1*Math.cos(a.rotation.y),r.position.x+=.1*Math.sin(a.rotation.y)),f.left&&(r.position.x-=.1*Math.cos(a.rotation.y),r.position.z+=.1*Math.sin(a.rotation.y)),f.right&&(r.position.x+=.1*Math.cos(a.rotation.y),r.position.z-=.1*Math.sin(a.rotation.y)),B.setFromObject(r);for(const t of T)if(B.intersectsBox(t)){r.position.copy(o);break}C()}function Ee(){b.left&&(a.rotation.y+=N),b.right&&(a.rotation.y-=N)}function ue(e,o,t,s){if(o.setFromObject(e),e.position.distanceTo(r.position)<=Y){oe(e,o);return}const i=e.position.clone(),p=new THREE.Vector3;p.subVectors(r.position,e.position).normalize(),e.position.x+=p.x*q,e.position.z+=p.z*q,o.setFromObject(e),c.zombies.forEach(h=>{if(h.group!==e&&o.intersectsBox(h.boundingBox)){const u=new THREE.Vector3;u.subVectors(h.group.position,e.position).normalize(),h.group.position.x+=u.x*.2,h.group.position.z+=u.z*.2,e.position.copy(i)}}),e.lookAt(r.position.x,e.position.y,r.position.z),s(t)}function we(e,o){const t=new THREE.Vector3;t.subVectors(e.position,r.position).normalize();const s=e.position.clone(),n=.1;let i=0;for(;i<o;){e.position.x+=t.x*n,e.position.z+=t.z*n,i+=n;const p=new THREE.Box3().setFromObject(e);let h=!1;if(c.zombies.forEach(u=>{u.group!==e&&p.intersectsBox(u.boundingBox)&&(h=!0)}),h){e.position.copy(s);break}s.copy(e.position)}}function ye(){if(R){const e=(performance.now()-v)/2e3,o=Math.min(1+e,2);if(e>=1){const t=.05*Math.sin(performance.now()*10);d.position.x=.5+t}else d.position.x=.5;d.scale.set(o,o,o)}else if(P){const e=(performance.now()-Q)/1e3;e<.2?d.position.set(.5,-.5,-2):(e<.4||(P=!1,d.scale.set(1,1,1)),d.position.set(.5,-.5,-1))}else d.scale.set(1,1,1),d.position.set(.5,-.5,-1)}function ge(){const e=document.getElementById("player-health-bar"),o=Math.max(M/100,0);e.style.width=`${o*100}%`,c.zombies.forEach(t=>{const s=Math.max(t.health/100,0);t.group.children.forEach(n=>{n.geometry instanceof THREE.PlaneGeometry&&(n.scale.x=s,n.material.color.set(s>.5?65280:16711680))})})}function be(){cancelAnimationFrame(animationId),y>Z&&(Z=y);const e=document.createElement("div");e.id="game-over-overlay",e.style.position="absolute",e.style.top="50%",e.style.left="50%",e.style.transform="translate(-50%, -50%)",e.style.fontSize="48px",e.style.color="red",e.style.backgroundColor="rgba(0, 0, 0, 0.8)",e.style.padding="20px",e.style.borderRadius="10px",e.innerHTML=`
        <div>Game Over</div>
        <div>Score: ${y}</div>
        <div>High Score: ${Z}</div>
        <div>Press Enter to Restart</div>
    `,document.body.appendChild(e),window.addEventListener("keydown",ee)}function ee(e){e.key==="Enter"&&(window.removeEventListener("keydown",ee),Me())}function oe(e,o){if(H){console.log("Zombie is already attacking or dead.");return}console.log("Zombie started attacking!"),H=!0,K=performance.now();const t=setInterval(()=>{if(!c.zombies.some(n=>n.group===e)){console.log("Zombie died during attack. Stopping animation."),clearInterval(t),H=!1;return}const s=(performance.now()-K)/1e3;s<O/2?(console.log("Zombie arms moving forward."),e.children[3].position.z-=.05,e.children[4].position.z-=.05):s<O?(console.log("Zombie arms moving back."),e.children[3].position.z+=.05,e.children[4].position.z+=.05):(console.log("Zombie attack animation ended."),clearInterval(t),H=!1)},16);setTimeout(()=>{if(!c.zombies.some(s=>s.group===e)){console.log("Zombie died before applying damage.");return}B.intersectsBox(o)&&(M-=10,console.log(`Player hit by zombie! Health: ${M}`),Te(),M<=0&&(console.log("Game Over! Player defeated."),be()))},O*1e3)}function Te(){const e=document.getElementById("damage-overlay");e.style.opacity=1,setTimeout(()=>{e.style.opacity=0},1e3)}function I(){animationId=requestAnimationFrame(I),me(),Ee(),c.updateZombies(),xe(),ke(),ye(),ge(),C(),x.render(E,a)}window.addEventListener("resize",()=>{x.setSize(window.innerWidth,window.innerHeight),a.aspect=window.innerWidth/window.innerHeight,a.updateProjectionMatrix()});function U(e,o){let t=!1;c.zombies.forEach((s,n)=>{s.health>0&&B.intersectsBox(s.boundingBox)&&(s.health-=e,console.log(`Zombie ${n+1} hit! Damage: ${e}, Health: ${s.health}`),we(s.group,o),s.health<=0&&c.handleZombieDeath(n),t=!0)}),t&&(l.style.backgroundColor="red",setTimeout(()=>{l.style.backgroundColor="white"},200))}class He{constructor(){this.zombies=[]}addZombie(o){const t=new THREE.Group,s=Math.floor(Math.random()*16777215),n=new THREE.BoxGeometry(1,1.5,.5),i=new THREE.MeshBasicMaterial({color:s}),p=new THREE.Mesh(n,i);p.position.set(0,1.25,0),t.add(p);const h=new THREE.BoxGeometry(.75,.75,.75),u=new THREE.MeshBasicMaterial({color:25600}),L=new THREE.Mesh(h,u);L.position.set(0,2.25,0),t.add(L);const V=new THREE.BoxGeometry(.4,.75,.4),z=new THREE.MeshBasicMaterial({color:9127187}),D=new THREE.Mesh(V,z);D.position.set(-.3,.375,0),t.add(D);const F=new THREE.Mesh(V,z);F.position.set(.3,.375,0),t.add(F);const $=new THREE.BoxGeometry(.3,.75,.3),j=new THREE.MeshBasicMaterial({color:25600}),S=new THREE.Mesh($,j);S.position.set(-.75,1.5,0),S.rotation.x=Math.PI/2,t.add(S);const G=new THREE.Mesh($,j);G.position.set(.75,1.5,0),G.rotation.x=Math.PI/2,t.add(G);const te=new THREE.PlaneGeometry(1,.1),ne=new THREE.MeshBasicMaterial({color:65280}),W=new THREE.Mesh(te,ne);W.position.set(0,3,0),t.add(W),t.position.copy(o),E.add(t),this.zombies.push({group:t,health:100,boundingBox:new THREE.Box3().setFromObject(t)})}updateZombies(){this.zombies.forEach((o,t)=>{if(o.health>0){ue(o.group,o.boundingBox,o.health,i=>{o.health=i}),o.group.position.distanceTo(r.position)<=Y&&!H&&oe(o.group,o.boundingBox);const n=Math.max(o.health/100,0);o.group.children.forEach(i=>{i.geometry instanceof THREE.PlaneGeometry&&(i.scale.x=n,i.material.color.set(n>.5?65280:16711680))})}else this.handleZombieDeath(t)})}handleZombieDeath(o){const t=this.zombies[o],s=t.group.children[0].material.color,n=new THREE.MeshBasicMaterial({color:s}),i=new THREE.Mesh(new THREE.BoxGeometry(1,.5,1),n);i.position.copy(t.group.position),E.add(i),E.remove(t.group),this.zombies.splice(o,1),y+=10,_(),console.log("Zombie defeated! A corpse has been left behind.")}areAllZombiesDead(){return this.zombies.length===0}}const c=new He;c.addZombie(new THREE.Vector3(0,0,-7));c.addZombie(new THREE.Vector3(-3,0,-7));c.addZombie(new THREE.Vector3(3,0,-7));const O=1;function Me(){console.log("Restarting game...");const e=document.getElementById("game-over-overlay");e&&e.remove(),M=100,y=0,_(),c.zombies.forEach(o=>{E.remove(o.group)}),c.zombies=[],c.addZombie(new THREE.Vector3(0,0,-7)),c.addZombie(new THREE.Vector3(-3,0,-7)),c.addZombie(new THREE.Vector3(3,0,-7)),r.position.set(0,.5,0),C(),I()}function w(e,o){const t=new THREE.BoxGeometry(1,2,.1),s=new THREE.MeshBasicMaterial({color:9127187}),n=new THREE.Mesh(t,s);return n.position.copy(e),n.rotation.y=o,E.add(n),n}const T=[];for(let e=-25;e<=25;e+=1){const o=w(new THREE.Vector3(e,1,25),0);T.push(new THREE.Box3().setFromObject(o))}for(let e=-25;e<=25;e+=1){const o=w(new THREE.Vector3(e,1,-25),0);T.push(new THREE.Box3().setFromObject(o))}for(let e=-25;e<=25;e+=1){const o=w(new THREE.Vector3(-25,1,e),Math.PI/2);T.push(new THREE.Box3().setFromObject(o))}for(let e=-25;e<=25;e+=1){const o=w(new THREE.Vector3(25,1,e),Math.PI/2);T.push(new THREE.Box3().setFromObject(o))}const Re=[w(new THREE.Vector3(-25,1,25),0),w(new THREE.Vector3(25,1,25),0),w(new THREE.Vector3(-25,1,-25),0),w(new THREE.Vector3(25,1,-25),0)];Re.forEach(e=>{T.push(new THREE.Box3().setFromObject(e))});window.addEventListener("resize",()=>{x.setSize(window.innerWidth,window.innerHeight),a.aspect=window.innerWidth/window.innerHeight,a.updateProjectionMatrix()});function xe(){if(c.areAllZombiesDead()){const e=Math.floor(y/50)+3;console.log(`Spawning ${e} zombies...`);for(let o=0;o<e;o++){const t=Math.random()*40-20+(Math.random()>.5?30:-30),s=Math.random()*40-20+(Math.random()>.5?30:-30);c.addZombie(new THREE.Vector3(t,0,s))}}}I();function ke(){let e=!1;c.zombies.forEach(o=>{o.group.position.distanceTo(r.position)<=he&&(e=!0)}),e?l.style.backgroundColor="orange":l.style.backgroundColor="white"}
